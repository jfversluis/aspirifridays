@page "/login"
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Admin Login</PageTitle>

<div class="login-container">
    <div class="login-card">
        <div class="logo-section">
            <img src="/favicon.png" alt="Bingo Admin" class="logo" />
            <h1>Bingo Admin Portal</h1>
            <p class="subtitle">Enter the admin password to access the admin panel</p>
        </div>
        
        <div class="login-section">
            <form method="post" action="/auth/login">
                <AntiforgeryToken />
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        <i class="fas fa-exclamation-circle"></i> @errorMessage
                    </div>
                }
                
                <div class="form-group">
                    <label for="password" class="form-label">
                        <i class="fas fa-lock"></i> Password
                    </label>
                    <input id="password" name="password" type="password"
                           class="form-control form-control-lg" 
                           placeholder="Enter admin password" 
                           required
                           autofocus />
                </div>
                
                <button type="submit" class="btn btn-primary btn-large">
                    <i class="fas fa-sign-in-alt me-2"></i>
                    <span>Sign In</span>
                </button>
            </form>
        </div>
        
        <div class="info-section">
            <p class="info-text">
                <strong>Access Requirements:</strong><br/>
                • Valid admin password<br/>
                • Session expires after 24 hours
            </p>
        </div>
    </div>
</div>

@code {
    private string errorMessage = string.Empty;
    
    [SupplyParameterFromQuery]
    public string? Error { get; set; }
    
    protected override void OnInitialized()
    {
        errorMessage = Error switch
        {
            "invalid" => "Invalid password. Please try again.",
            "nouser" => "The user does not exist.",
            _ => "",
        };
    }
}

<style>
    .login-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 2rem;
    }

    .login-card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        padding: 3rem;
        max-width: 400px;
        width: 100%;
        text-align: center;
    }

    .logo-section {
        margin-bottom: 2rem;
    }

    .logo {
        width: 64px;
        height: 64px;
        margin-bottom: 1rem;
    }

    .logo-section h1 {
        color: #333;
        font-size: 1.8rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .subtitle {
        color: #666;
        font-size: 1rem;
        margin-bottom: 0;
    }

    .login-section {
        margin-bottom: 2rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
        text-align: left;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        color: #333;
        font-weight: 500;
    }

    .form-control-lg {
        padding: 0.75rem 1rem;
        border-radius: 8px;
        border: 2px solid #e1e5e9;
        font-size: 1rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .form-control-lg:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        outline: none;
    }

    .btn-large {
        width: 100%;
        padding: 0.875rem 2rem;
        font-size: 1.1rem;
        font-weight: 500;
        border-radius: 8px;
        border: none;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        cursor: pointer;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-large:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
    }

    .btn-large:disabled {
        opacity: 0.7;
        cursor: not-allowed;
    }

    .alert {
        padding: 1rem;
        margin-bottom: 1rem;
        border-radius: 8px;
        text-align: left;
    }

    .alert-danger {
        background-color: #f8d7da;
        border: 1px solid #f5c6cb;
        color: #721c24;
    }

    .info-section {
        padding-top: 1.5rem;
        border-top: 1px solid #e9ecef;
    }

    .info-text {
        color: #6c757d;
        font-size: 0.9rem;
        text-align: left;
        margin: 0;
    }

    .spinner-border-sm {
        width: 1rem;
        height: 1rem;
        border-width: 0.1rem;
    }

    .validation-message {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
</style>
